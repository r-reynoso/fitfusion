name: Deploy FitFusion to Firebase

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.24.0'
  NODE_VERSION: '18'
  FIREBASE_PROJECT_ID: 'n5j2e49cjejvbdwkdlhaxt9d4woqgh'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Verify environment
      run: |
        echo "Flutter version:"
        flutter --version
        echo "Node version:"
        node --version
        echo "NPM version:"
        npm --version
        echo "Project structure:"
        ls -la
        
    - name: Install Flutter dependencies
      run: |
        flutter clean
        flutter pub get
        
    - name: Build Flutter web application
      run: |
        flutter build web --release --web-renderer canvaskit
        echo "Build completed. Contents of build/web:"
        ls -la build/web/
      
    - name: Install Firebase CLI
      run: npm install -g firebase-tools@13.0.2
      
    - name: Verify Firebase service account
      run: |
        if [ -z "$FIREBASE_SERVICE_ACCOUNT" ]; then
          echo "ERROR: FIREBASE_SERVICE_ACCOUNT secret is not set"
          exit 1
        fi
        echo "Service account secret is available"
      env:
        FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        
    - name: Create and authenticate with Firebase
      run: |
        echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > $HOME/service-account-key.json
        export GOOGLE_APPLICATION_CREDENTIALS="$HOME/service-account-key.json"
        firebase use ${{ env.FIREBASE_PROJECT_ID }}
        echo "Successfully authenticated with Firebase project: ${{ env.FIREBASE_PROJECT_ID }}"
      env:
        FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        
    - name: Deploy to Firebase Hosting
      run: |
        export GOOGLE_APPLICATION_CREDENTIALS="$HOME/service-account-key.json"
        firebase deploy --only hosting --project ${{ env.FIREBASE_PROJECT_ID }}
      env:
        GOOGLE_APPLICATION_CREDENTIALS: $HOME/service-account-key.json
        
    - name: Deploy Firestore rules and indexes
      run: |
        export GOOGLE_APPLICATION_CREDENTIALS="$HOME/service-account-key.json"
        firebase deploy --only firestore:rules,firestore:indexes --project ${{ env.FIREBASE_PROJECT_ID }}
      env:
        GOOGLE_APPLICATION_CREDENTIALS: $HOME/service-account-key.json
      continue-on-error: true
        
    - name: Cleanup sensitive files
      run: rm -f $HOME/service-account-key.json
      if: always()
      
    - name: Deployment successful
      run: |
        echo "‚úÖ FitFusion deployed successfully!"
        echo "üåê Live URL: https://${{ env.FIREBASE_PROJECT_ID }}.web.app"
        echo "üîó Alternative URL: https://${{ env.FIREBASE_PROJECT_ID }}.firebaseapp.com"
        echo ""
        echo "üéØ Next steps:"
        echo "1. Visit your live app at the URLs above"
        echo "2. Test authentication and core functionality"
        echo "3. Configure custom domain if needed"
